{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2270536\\\\finances-gestao\\\\src\\\\pages\\\\GraficoDeOnda.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraficoDeOnda = ({\n  mesSelecionado\n}) => {\n  _s();\n  const [grafico, setGrafico] = useState(null); // Aqui, você armazena a instância do gráfico\n\n  useEffect(() => {\n    // Recupere o contexto do canvas\n    const ctx = document.getElementById('grafico-onda').getContext('2d');\n\n    // Exemplo de dados de gráfico de onda baseados no mês selecionado\n    const dadosDoGrafico = [10, 20, 30, 40, 50];\n    if (grafico) {\n      // Se o gráfico já existe, atualize os dados\n      grafico.data.datasets[0].data = dadosDoGrafico;\n      grafico.update();\n    } else {\n      // Caso contrário, crie um novo gráfico\n      const novoGrafico = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: ['Semana 1', 'Semana 2', 'Semana 3', 'Semana 4', 'Semana 5'],\n          datasets: [{\n            label: 'Gráfico de Onda',\n            data: dadosDoGrafico,\n            borderColor: 'blue',\n            fill: false\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n      setGrafico(novoGrafico);\n    }\n  }, [mesSelecionado]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grafico-de-onda\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Gr\\xE1fico de Onda do M\\xEAs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"grafico-onda\",\n      width: \"400\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(GraficoDeOnda, \"9h35hjiLF3HApVulzZeiVzL+Y0o=\");\n_c = GraficoDeOnda;\nexport default GraficoDeOnda;\nvar _c;\n$RefreshReg$(_c, \"GraficoDeOnda\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","GraficoDeOnda","mesSelecionado","_s","grafico","setGrafico","ctx","document","getElementById","getContext","dadosDoGrafico","data","datasets","update","novoGrafico","type","labels","label","borderColor","fill","options","responsive","maintainAspectRatio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","_c","$RefreshReg$"],"sources":["C:/Users/2270536/finances-gestao/src/pages/GraficoDeOnda.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst GraficoDeOnda = ({ mesSelecionado }) => {\r\n  const [grafico, setGrafico] = useState(null); // Aqui, você armazena a instância do gráfico\r\n\r\n  useEffect(() => {\r\n    // Recupere o contexto do canvas\r\n    const ctx = document.getElementById('grafico-onda').getContext('2d');\r\n\r\n    // Exemplo de dados de gráfico de onda baseados no mês selecionado\r\n    const dadosDoGrafico = [10, 20, 30, 40, 50];\r\n\r\n    if (grafico) {\r\n      // Se o gráfico já existe, atualize os dados\r\n      grafico.data.datasets[0].data = dadosDoGrafico;\r\n      grafico.update();\r\n    } else {\r\n      // Caso contrário, crie um novo gráfico\r\n      const novoGrafico = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: ['Semana 1', 'Semana 2', 'Semana 3', 'Semana 4', 'Semana 5'],\r\n          datasets: [\r\n            {\r\n              label: 'Gráfico de Onda',\r\n              data: dadosDoGrafico,\r\n              borderColor: 'blue',\r\n              fill: false,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n        },\r\n      });\r\n\r\n      setGrafico(novoGrafico);\r\n    }\r\n  }, [mesSelecionado]);\r\n\r\n  return (\r\n    <div className=\"grafico-de-onda\">\r\n      <h4>Gráfico de Onda do Mês</h4>\r\n      <canvas id=\"grafico-onda\" width=\"400\" height=\"200\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraficoDeOnda;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;;IAEpE;IACA,MAAMC,cAAc,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAE3C,IAAIN,OAAO,EAAE;MACX;MACAA,OAAO,CAACO,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACD,IAAI,GAAGD,cAAc;MAC9CN,OAAO,CAACS,MAAM,CAAC,CAAC;IAClB,CAAC,MAAM;MACL;MACA,MAAMC,WAAW,GAAG,IAAIhB,KAAK,CAACQ,GAAG,EAAE;QACjCS,IAAI,EAAE,MAAM;QACZJ,IAAI,EAAE;UACJK,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;UACpEJ,QAAQ,EAAE,CACR;YACEK,KAAK,EAAE,iBAAiB;YACxBN,IAAI,EAAED,cAAc;YACpBQ,WAAW,EAAE,MAAM;YACnBC,IAAI,EAAE;UACR,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE;QACvB;MACF,CAAC,CAAC;MAEFjB,UAAU,CAACS,WAAW,CAAC;IACzB;EACF,CAAC,EAAE,CAACZ,cAAc,CAAC,CAAC;EAEpB,oBACEF,OAAA;IAAKuB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BxB,OAAA;MAAAwB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B5B,OAAA;MAAQ6B,EAAE,EAAC,cAAc;MAACC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACzB,EAAA,CA7CIF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA+CnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}