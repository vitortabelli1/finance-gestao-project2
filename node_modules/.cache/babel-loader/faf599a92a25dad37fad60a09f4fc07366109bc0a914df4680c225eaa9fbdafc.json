{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2270536\\\\finances-gestao\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { Chart, CategoryScale, LinearScale, BarElement, BarController } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [exibirChartPizza, setExibirChartPizza] = useState(false);\n  useEffect(() => {\n    // Lógica para fixar a linha ao rolar\n    const handleScroll = () => {\n      const line = document.querySelector('.lines-across');\n      const scrollPosition = window.scrollY;\n      const positionToFix = 200;\n      if (line) {\n        if (scrollPosition >= positionToFix) {\n          line.style.position = 'fixed';\n          line.style.top = '0';\n        } else {\n          line.style.position = 'static';\n        }\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  if (line) {\n    if (scrollPosition >= positionToFix) {\n      line.style.position = 'fixed';\n      line.style.top = '0';\n    } else {\n      line.style.position = 'static';\n    }\n  }\n  const [descricao, setDescricao] = useState('');\n  const [valor, setValor] = useState('');\n  const [registros, setRegistros] = useState([]);\n  const [data, setData] = useState('');\n  const [categoria, setCategoria] = useState('');\n  const [saldoTotal, setSaldoTotal] = useState(0);\n  const [contadorDespesas, setContadorDespesas] = useState(0);\n  const [saldoGuardado, setSaldoGuardado] = useState(0);\n  const [saldoIndisponivel, setSaldoIndisponivel] = useState(0);\n  const [categoriaDataBar, setCategoriaDataBar] = useState(null);\n  const calcularSaldoGuardado = quantidade => {\n    setSaldoGuardado(parseFloat(quantidade) || 0);\n  };\n  const handleAdicionar = () => {\n    const novoRegistro = {\n      descricao,\n      valor,\n      data,\n      categoria\n    };\n    setRegistros([...registros, novoRegistro]);\n    setDescricao('');\n    setValor('');\n    setData('');\n    setCategoria('');\n    setContadorDespesas(contadorDespesas + 1);\n    setExibirChartPizza(true); // Exibir o chart-pizza quando um novo registro é adicionado\n\n    // Chama a função para atualizar o gráfico de pizza após adicionar um novo registro\n    calcularDistribuicaoCategorias();\n  };\n  const calcularSaldoDisponivel = () => {\n    const totalDespesas = registros.reduce((total, registro) => total + parseFloat(registro.valor), 0);\n    const saldoDisponivel = saldoTotal - totalDespesas;\n    return {\n      saldoDisponivel,\n      totalDespesas\n    };\n  };\n  const calcularPorcentagemLucro = () => {\n    const {\n      saldoDisponivel,\n      totalDespesas\n    } = calcularSaldoDisponivel();\n    const porcentagemLucro = saldoDisponivel / (totalDespesas || 1) * 100;\n    return porcentagemLucro;\n  };\n  useEffect(() => {\n    Chart.register(CategoryScale, LinearScale, BarElement, BarController);\n    const chartData = {\n      labels: ['Saldo Total', 'Saldo Disponível'],\n      datasets: [{\n        label: 'Saldo',\n        data: [saldoTotal, calcularSaldoDisponivel().saldoDisponivel],\n        backgroundColor: ['blue', 'red']\n      }]\n    };\n    setChartData(chartData);\n  }, [saldoTotal, registros]);\n  const [chartData, setChartData] = useState(null);\n  const {\n    saldoDisponivel,\n    totalDespesas\n  } = calcularSaldoDisponivel();\n  const calcularDistribuicaoCategorias = () => {\n    const categorias = {};\n    registros.forEach(registro => {\n      const {\n        categoria\n      } = registro;\n      categorias[categoria] = categorias[categoria] ? categorias[categoria] + 1 : 1;\n    });\n    const labels = Object.keys(categorias);\n    const data = Object.values(categorias);\n    setCategoriaData({\n      options: {\n        labels\n      },\n      series: data,\n      type: 'donut'\n    });\n  };\n  useEffect(() => {\n    calcularDistribuicaoCategorias();\n  }, [registros]);\n  const [categoriaData, setCategoriaData] = useState(null);\n  const [waveChartData, setWaveChartData] = useState({\n    options: {\n      chart: {\n        id: 'wave-chart',\n        type: 'line',\n        height: 350\n      },\n      xaxis: {\n        categories: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']\n      }\n    },\n    series: [{\n      name: 'Gastos',\n      data: [1000, 1500, 1200, 1800, 2000, 1600, 1700, 1900, 2100, 2200, 2400, 2600]\n    }]\n  });\n  const [lucroChartData, setLucroChartData] = useState({\n    options: {\n      chart: {\n        id: 'lucro-chart',\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          hollow: {\n            size: '70%'\n          },\n          dataLabels: {\n            showOn: 'always'\n          }\n        }\n      },\n      labels: ['Lucro']\n    },\n    series: [calcularPorcentagemLucro()]\n  });\n  const [quantidadeGuardar, setQuantidadeGuardar] = useState('');\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [iraRetirar, setIraRetirar] = useState('');\n  const [valorImposto, setValorImposto] = useState(0);\n  const [contasPassaram, setContasPassaram] = useState(false);\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const saldoDisponivel = calcularSaldoDisponivel().saldoDisponivel;\n    const resultado = parseFloat(quantidadeGuardar) - saldoDisponivel;\n    setSaldoGuardado(resultado >= 0 ? parseFloat(quantidadeGuardar) : 0);\n    setSaldoIndisponivel(resultado < 0 ? Math.abs(resultado) : 0);\n    setValorImposto(resultado);\n    setContasPassaram(resultado >= 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-expense-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saldo-total-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"saldoTotal\",\n          children: \"Saldo Total:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"saldoTotal\",\n          value: saldoTotal,\n          onChange: e => setSaldoTotal(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"descricao\",\n          children: \"Gastos:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"descricao\",\n          value: descricao,\n          onChange: e => setDescricao(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"value-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"valor\",\n          children: \"Valor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"valor\",\n          value: valor,\n          onChange: e => setValor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"data\",\n          children: \"Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"data\",\n          value: data,\n          onChange: e => setData(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categoria\",\n          children: \"Categoria:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"categoria\",\n          value: categoria,\n          onChange: e => setCategoria(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione uma categoria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Conta de Luz\",\n            children: \"Conta de Luz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Conta de Telefone\",\n            children: \"Conta de Telefone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Conta de \\xC1gua\",\n            children: \"Conta de \\xC1gua\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Contas de Casa\",\n            children: \"Contas de Casa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Gastos Emergenciais\",\n            children: \"Gastos Emergenciais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Compras\",\n            children: \"Compras\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdicionar,\n        children: \"Adicionar Registro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-container\",\n        children: exibirChartPizza && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-pizza\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Maiores gastos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: {\n              chart: {\n                type: 'donut'\n              },\n              labels: ['A', 'B', 'C']\n            },\n            series: [20, 30, 50],\n            type: \"donut\",\n            width: 380\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Xf9nTENANF2cTalQcVgwdyUyl7M=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","ReactApexChart","Chart","CategoryScale","LinearScale","BarElement","BarController","jsxDEV","_jsxDEV","Dashboard","_s","exibirChartPizza","setExibirChartPizza","useEffect","handleScroll","line","document","querySelector","scrollPosition","window","scrollY","positionToFix","style","position","top","addEventListener","removeEventListener","descricao","setDescricao","valor","setValor","registros","setRegistros","data","setData","categoria","setCategoria","saldoTotal","setSaldoTotal","contadorDespesas","setContadorDespesas","saldoGuardado","setSaldoGuardado","saldoIndisponivel","setSaldoIndisponivel","categoriaDataBar","setCategoriaDataBar","calcularSaldoGuardado","quantidade","parseFloat","handleAdicionar","novoRegistro","calcularDistribuicaoCategorias","calcularSaldoDisponivel","totalDespesas","reduce","total","registro","saldoDisponivel","calcularPorcentagemLucro","porcentagemLucro","register","chartData","labels","datasets","label","backgroundColor","setChartData","categorias","forEach","Object","keys","values","setCategoriaData","options","series","type","categoriaData","waveChartData","setWaveChartData","chart","id","height","xaxis","categories","name","lucroChartData","setLucroChartData","plotOptions","radialBar","hollow","size","dataLabels","showOn","quantidadeGuardar","setQuantidadeGuardar","dataInicio","setDataInicio","dataFim","setDataFim","iraRetirar","setIraRetirar","valorImposto","setValorImposto","contasPassaram","setContasPassaram","handleFormSubmit","e","preventDefault","resultado","Math","abs","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","onClick","width","_c","$RefreshReg$"],"sources":["C:/Users/2270536/finances-gestao/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Chart, CategoryScale, LinearScale, BarElement, BarController } from 'chart.js';\r\n\r\n\r\nfunction Dashboard() {\r\n  const [exibirChartPizza, setExibirChartPizza] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    // Lógica para fixar a linha ao rolar\r\n    const handleScroll = () => {\r\n      const line = document.querySelector('.lines-across');\r\n      const scrollPosition = window.scrollY;\r\n      const positionToFix = 200;\r\n\r\n      if (line) {\r\n        if (scrollPosition >= positionToFix) {\r\n          line.style.position = 'fixed';\r\n          line.style.top = '0';\r\n        } else {\r\n          line.style.position = 'static';\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  \r\n\r\n  if (line) {\r\n    if (scrollPosition >= positionToFix) {\r\n        line.style.position = 'fixed';\r\n        line.style.top = '0';\r\n    } else {\r\n        line.style.position = 'static';\r\n    }\r\n}\r\n\r\n\r\n  const [descricao, setDescricao] = useState('');\r\n  const [valor, setValor] = useState('');\r\n  const [registros, setRegistros] = useState([]);\r\n  const [data, setData] = useState('');\r\n  const [categoria, setCategoria] = useState('');\r\n  const [saldoTotal, setSaldoTotal] = useState(0);\r\n  const [contadorDespesas, setContadorDespesas] = useState(0);\r\n  const [saldoGuardado, setSaldoGuardado] = useState(0);\r\n  const [saldoIndisponivel, setSaldoIndisponivel] = useState(0);\r\n  const [categoriaDataBar, setCategoriaDataBar] = useState(null);\r\n\r\n  \r\n  \r\n  const calcularSaldoGuardado = (quantidade) => {\r\n    setSaldoGuardado(parseFloat(quantidade) || 0);\r\n  };\r\n\r\n  const handleAdicionar = () => {\r\n    const novoRegistro = { descricao, valor, data, categoria };\r\n    setRegistros([...registros, novoRegistro]);\r\n    setDescricao('');\r\n    setValor('');\r\n    setData('');\r\n    setCategoria('');\r\n    setContadorDespesas(contadorDespesas + 1);\r\n    setExibirChartPizza(true); // Exibir o chart-pizza quando um novo registro é adicionado\r\n  \r\n    // Chama a função para atualizar o gráfico de pizza após adicionar um novo registro\r\n    calcularDistribuicaoCategorias();\r\n  };\r\n\r\n  const calcularSaldoDisponivel = () => {\r\n    const totalDespesas = registros.reduce((total, registro) => total + parseFloat(registro.valor), 0);\r\n    const saldoDisponivel = saldoTotal - totalDespesas;\r\n    return { saldoDisponivel, totalDespesas };\r\n  };\r\n\r\n  const calcularPorcentagemLucro = () => {\r\n    const { saldoDisponivel, totalDespesas } = calcularSaldoDisponivel();\r\n    const porcentagemLucro = (saldoDisponivel / (totalDespesas || 1)) * 100;\r\n    return porcentagemLucro;\r\n  };\r\n\r\n  useEffect(() => {\r\n    Chart.register(CategoryScale, LinearScale, BarElement, BarController);\r\n\r\n    const chartData = {\r\n      labels: ['Saldo Total', 'Saldo Disponível'],\r\n      datasets: [\r\n        {\r\n          label: 'Saldo',\r\n          data: [saldoTotal, calcularSaldoDisponivel().saldoDisponivel],\r\n          backgroundColor: ['blue', 'red'],\r\n        },\r\n      ],\r\n    };\r\n\r\n    setChartData(chartData);\r\n  }, [saldoTotal, registros]);\r\n\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  const { saldoDisponivel, totalDespesas } = calcularSaldoDisponivel();\r\n\r\n  const calcularDistribuicaoCategorias = () => {\r\n    const categorias = {};\r\n    registros.forEach((registro) => {\r\n      const { categoria } = registro;\r\n      categorias[categoria] = categorias[categoria] ? categorias[categoria] + 1 : 1;\r\n    });\r\n\r\n    const labels = Object.keys(categorias);\r\n    const data = Object.values(categorias);\r\n\r\n    setCategoriaData({\r\n      options: {\r\n        labels,\r\n      },\r\n      series: data,\r\n      type: 'donut',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    calcularDistribuicaoCategorias();\r\n  }, [registros]);\r\n\r\n  const [categoriaData, setCategoriaData] = useState(null);\r\n\r\n  const [waveChartData, setWaveChartData] = useState({\r\n    options: {\r\n      chart: {\r\n        id: 'wave-chart',\r\n        type: 'line',\r\n        height: 350,\r\n      },\r\n      xaxis: {\r\n        categories: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Gastos',\r\n        data: [1000, 1500, 1200, 1800, 2000, 1600, 1700, 1900, 2100, 2200, 2400, 2600],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [lucroChartData, setLucroChartData] = useState({\r\n    options: {\r\n      chart: {\r\n        id: 'lucro-chart',\r\n        type: 'radialBar',\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          hollow: {\r\n            size: '70%',\r\n          },\r\n          dataLabels: {\r\n            showOn: 'always',\r\n          },\r\n        },\r\n      },\r\n      labels: ['Lucro'],\r\n    },\r\n    series: [calcularPorcentagemLucro()],\r\n  });\r\n\r\n  const [quantidadeGuardar, setQuantidadeGuardar] = useState('');\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [iraRetirar, setIraRetirar] = useState('');\r\n\r\n  const [valorImposto, setValorImposto] = useState(0);\r\n  const [contasPassaram, setContasPassaram] = useState(false);\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const saldoDisponivel = calcularSaldoDisponivel().saldoDisponivel;\r\n    const resultado = parseFloat(quantidadeGuardar) - saldoDisponivel;\r\n    setSaldoGuardado(resultado >= 0 ? parseFloat(quantidadeGuardar) : 0);\r\n    setSaldoIndisponivel(resultado < 0 ? Math.abs(resultado) : 0);\r\n    setValorImposto(resultado);\r\n    setContasPassaram(resultado >= 0);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"add-expense-container\">\r\n      <div className=\"saldo-total-input\">\r\n            <label htmlFor=\"saldoTotal\">Saldo Total:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"saldoTotal\"\r\n              value={saldoTotal}\r\n              onChange={(e) => setSaldoTotal(e.target.value)}\r\n            />\r\n          </div>\r\n      <div className=\"description-input\">\r\n            <label htmlFor=\"descricao\">Gastos:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"descricao\"\r\n              value={descricao}\r\n              onChange={(e) => setDescricao(e.target.value)}\r\n            />\r\n          </div>\r\n      <div className=\"value-input\">\r\n            <label htmlFor=\"valor\">Valor:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"valor\"\r\n              value={valor}\r\n              onChange={(e) => setValor(e.target.value)}\r\n            />\r\n          </div>\r\n      <div className=\"date-input\">\r\n            <label htmlFor=\"data\">Data:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"data\"\r\n              value={data}\r\n              onChange={(e) => setData(e.target.value)}\r\n            />\r\n          </div>\r\n      <div className=\"category-input\">\r\n            \r\n            <label htmlFor=\"categoria\">Categoria:</label>\r\n            <select\r\n              id=\"categoria\"\r\n              value={categoria}\r\n              onChange={(e) => setCategoria(e.target.value)}\r\n            >\r\n              <option value=\"\">Selecione uma categoria</option>\r\n              <option value=\"Conta de Luz\">Conta de Luz</option>\r\n              <option value=\"Conta de Telefone\">Conta de Telefone</option>\r\n              <option value=\"Conta de Água\">Conta de Água</option>\r\n              <option value=\"Contas de Casa\">Contas de Casa</option>\r\n              <option value=\"Gastos Emergenciais\">Gastos Emergenciais</option>\r\n              <option value=\"Compras\">Compras</option>\r\n            </select>\r\n          </div>\r\n          \r\n        <button onClick={handleAdicionar}>Adicionar Registro</button>\r\n        <div className=\"body-container\">\r\n          {/* Condicional para renderizar o chart-pizza somente se exibirChartPizza for true */}\r\n          {exibirChartPizza && (\r\n            <div className=\"chart-pizza\">\r\n              <h4>Maiores gastos</h4>\r\n              {/* Simulação de dados do gráfico */}\r\n              <ReactApexChart\r\n                options={{ chart: { type: 'donut' }, labels: ['A', 'B', 'C'] }}\r\n                series={[20, 30, 50]}\r\n                type=\"donut\"\r\n                width={380}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}