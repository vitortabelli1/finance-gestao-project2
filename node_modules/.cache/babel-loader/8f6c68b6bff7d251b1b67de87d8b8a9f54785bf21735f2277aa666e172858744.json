{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2270536\\\\finances-gestao\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, CategoryScale, LinearScale, BarElement, BarController } from 'chart.js';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [modoNoturno, setModoNoturno] = useState(false);\n  const [descricao, setDescricao] = useState('');\n  const [valor, setValor] = useState('');\n  const [registros, setRegistros] = useState([]);\n  const [data, setData] = useState('');\n  const [categoria, setCategoria] = useState('');\n  const [saldoTotal, setSaldoTotal] = useState(0);\n  const [contadorDespesas, setContadorDespesas] = useState(0);\n  const [saldoGuardado, setSaldoGuardado] = useState(0);\n  const [saldoIndisponivel, setSaldoIndisponivel] = useState(0);\n  const [dadosGraficoBarras, setDadosGraficoBarras] = useState(null);\n  const calcularDistribuicaoCategorias = () => {\n    const categorias = {};\n    registros.forEach(registro => {\n      const {\n        categoria\n      } = registro;\n      categorias[categoria] = categorias[categoria] ? categorias[categoria] + 1 : 1;\n    });\n    const labels = Object.keys(categorias);\n    const data = Object.values(categorias);\n    const dataGraficoBarras = {\n      labels,\n      datasets: [{\n        label: 'Quantidade de Gastos',\n        data,\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        borderColor: 'rgba(255, 99, 132, 1)',\n        borderWidth: 1\n      }]\n    };\n    setDadosGraficoBarras(dataGraficoBarras);\n  };\n  useEffect(() => {\n    calcularDistribuicaoCategorias();\n  }, [registros]);\n  useEffect(() => {\n    // Lógica para manipular o modo noturno\n    const body = document.body;\n    if (modoNoturno) {\n      body.classList.add('dark-mode');\n    } else {\n      body.classList.remove('dark-mode');\n    }\n    body.classList.toggle('white-bold-text', modoNoturno);\n  }, [modoNoturno]);\n\n  // Restante do seu código...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard ${modoNoturno ? 'dark-mode' : ''}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"jJ3uh0kNdC8OPx1tY/RBLDE3Dbk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","CategoryScale","LinearScale","BarElement","BarController","ReactApexChart","jsxDEV","_jsxDEV","Dashboard","_s","modoNoturno","setModoNoturno","descricao","setDescricao","valor","setValor","registros","setRegistros","data","setData","categoria","setCategoria","saldoTotal","setSaldoTotal","contadorDespesas","setContadorDespesas","saldoGuardado","setSaldoGuardado","saldoIndisponivel","setSaldoIndisponivel","dadosGraficoBarras","setDadosGraficoBarras","calcularDistribuicaoCategorias","categorias","forEach","registro","labels","Object","keys","values","dataGraficoBarras","datasets","label","backgroundColor","borderColor","borderWidth","body","document","classList","add","remove","toggle","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/2270536/finances-gestao/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart, CategoryScale, LinearScale, BarElement, BarController } from 'chart.js';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nfunction Dashboard() {\r\n  const [modoNoturno, setModoNoturno] = useState(false);\r\n  const [descricao, setDescricao] = useState('');\r\n  const [valor, setValor] = useState('');\r\n  const [registros, setRegistros] = useState([]);\r\n  const [data, setData] = useState('');\r\n  const [categoria, setCategoria] = useState('');\r\n  const [saldoTotal, setSaldoTotal] = useState(0);\r\n  const [contadorDespesas, setContadorDespesas] = useState(0);\r\n  const [saldoGuardado, setSaldoGuardado] = useState(0);\r\n  const [saldoIndisponivel, setSaldoIndisponivel] = useState(0);\r\n  const [dadosGraficoBarras, setDadosGraficoBarras] = useState(null);\r\n\r\n  const calcularDistribuicaoCategorias = () => {\r\n    const categorias = {};\r\n    registros.forEach((registro) => {\r\n      const { categoria } = registro;\r\n      categorias[categoria] = categorias[categoria] ? categorias[categoria] + 1 : 1;\r\n    });\r\n\r\n    const labels = Object.keys(categorias);\r\n    const data = Object.values(categorias);\r\n\r\n    const dataGraficoBarras = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Quantidade de Gastos',\r\n          data,\r\n          backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          borderColor: 'rgba(255, 99, 132, 1)',\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n\r\n    setDadosGraficoBarras(dataGraficoBarras);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calcularDistribuicaoCategorias();\r\n  }, [registros]);\r\n\r\n  useEffect(() => {\r\n    // Lógica para manipular o modo noturno\r\n    const body = document.body;\r\n    if (modoNoturno) {\r\n      body.classList.add('dark-mode');\r\n    } else {\r\n      body.classList.remove('dark-mode');\r\n    }\r\n    body.classList.toggle('white-bold-text', modoNoturno);\r\n  }, [modoNoturno]);\r\n\r\n  // Restante do seu código...\r\n\r\n  return (\r\n    <div className={`dashboard ${modoNoturno ? 'dark-mode' : ''}`}>\r\n      {/* Seções do seu dashboard */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}