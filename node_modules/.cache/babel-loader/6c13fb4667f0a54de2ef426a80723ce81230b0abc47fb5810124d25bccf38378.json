{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2270536\\\\finances-gestao\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Bar } from 'react-chartjs-2';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [modoNoturno, setModoNoturno] = useState(false); // Estado do modo noturno\n\n  // ... Todo o restante do código do primeiro trecho ...\n\n  const [descricao, setDescricao] = useState('');\n  const [valor, setValor] = useState('');\n  const [registros, setRegistros] = useState([]);\n  const [data, setData] = useState('');\n  const [categoria, setCategoria] = useState('');\n  const [valorAGuardar, setValorAGuardar] = useState('');\n  const [saldoTotal, setSaldoTotal] = useState(0);\n  const [contadorDespesas, setContadorDespesas] = useState(0);\n\n  // ... Todo o restante do código do primeiro trecho ...\n\n  const [exibirChartPizza, setExibirChartPizza] = useState(false);\n  const handleAdicionar = () => {\n    const valorGuardado = parseFloat(valorAGuardar) || 0;\n    const saldoRestante = saldoTotal - totalDespesas;\n\n    // Garantir que o valor a ser guardado não ultrapasse o saldo restante\n    const valorAGuardarFinal = Math.min(valorGuardado, saldoRestante);\n    const novoRegistro = {\n      descricao,\n      valor,\n      data,\n      categoria,\n      valorAGuardar: valorAGuardarFinal\n    };\n    setRegistros([...registros, novoRegistro]);\n    setDescricao('');\n    setValor('');\n    setData('');\n    setCategoria('');\n    setValorAGuardar('');\n    setContadorDespesas(contadorDespesas + 1);\n    setExibirChartPizza(true); // Mostrar o gráfico de pizza ao adicionar um novo registro\n  };\n\n  // ... Todo o restante do código do primeiro trecho ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard ${modoNoturno ? 'dark-mode' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-expense-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-expense-button\",\n        onClick: handleAdicionar,\n        children: \"Adicionar Registro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-container\",\n        children: exibirChartPizza && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-pizza\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Maiores gastos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: {\n              chart: {\n                type: 'donut'\n              },\n              labels: ['A', 'B', 'C']\n            },\n            series: [20, 30, 50],\n            type: \"donut\",\n            width: 380\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"7fFqG7yj6HVTHEew8jtF5cREH8Q=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Bar","ReactApexChart","jsxDEV","_jsxDEV","Dashboard","_s","modoNoturno","setModoNoturno","descricao","setDescricao","valor","setValor","registros","setRegistros","data","setData","categoria","setCategoria","valorAGuardar","setValorAGuardar","saldoTotal","setSaldoTotal","contadorDespesas","setContadorDespesas","exibirChartPizza","setExibirChartPizza","handleAdicionar","valorGuardado","parseFloat","saldoRestante","totalDespesas","valorAGuardarFinal","Math","min","novoRegistro","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","options","chart","type","labels","series","width","_c","$RefreshReg$"],"sources":["C:/Users/2270536/finances-gestao/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nfunction Dashboard() {\r\n  const [modoNoturno, setModoNoturno] = useState(false); // Estado do modo noturno\r\n\r\n  // ... Todo o restante do código do primeiro trecho ...\r\n\r\n  const [descricao, setDescricao] = useState('');\r\n  const [valor, setValor] = useState('');\r\n  const [registros, setRegistros] = useState([]);\r\n  const [data, setData] = useState('');\r\n  const [categoria, setCategoria] = useState('');\r\n  const [valorAGuardar, setValorAGuardar] = useState('');\r\n  const [saldoTotal, setSaldoTotal] = useState(0);\r\n  const [contadorDespesas, setContadorDespesas] = useState(0);\r\n  \r\n  // ... Todo o restante do código do primeiro trecho ...\r\n\r\n  const [exibirChartPizza, setExibirChartPizza] = useState(false);\r\n\r\n  const handleAdicionar = () => {\r\n    const valorGuardado = parseFloat(valorAGuardar) || 0;\r\n    const saldoRestante = saldoTotal - totalDespesas;\r\n  \r\n    // Garantir que o valor a ser guardado não ultrapasse o saldo restante\r\n    const valorAGuardarFinal = Math.min(valorGuardado, saldoRestante);\r\n  \r\n    const novoRegistro = { descricao, valor, data, categoria, valorAGuardar: valorAGuardarFinal };\r\n  \r\n    setRegistros([...registros, novoRegistro]);\r\n    setDescricao('');\r\n    setValor('');\r\n    setData('');\r\n    setCategoria('');\r\n    setValorAGuardar('');\r\n    setContadorDespesas(contadorDespesas + 1);\r\n    setExibirChartPizza(true); // Mostrar o gráfico de pizza ao adicionar um novo registro\r\n  };\r\n\r\n  // ... Todo o restante do código do primeiro trecho ...\r\n\r\n  return (\r\n    <div className={`dashboard ${modoNoturno ? 'dark-mode' : ''}`}>\r\n      {/* ... Todo o restante do JSX do primeiro trecho ... */}\r\n      <div className=\"add-expense-container\">\r\n        <button className=\"add-expense-button\" onClick={handleAdicionar}>Adicionar Registro</button>\r\n        <div className=\"body-container\">\r\n          {/* Condicional para renderizar o chart-pizza somente se exibirChartPizza for true */}\r\n          {exibirChartPizza && (\r\n            <div className=\"chart-pizza\">\r\n              <h4>Maiores gastos</h4>\r\n              {/* Simulação de dados do gráfico */}\r\n              <ReactApexChart\r\n                options={{ chart: { type: 'donut' }, labels: ['A', 'B', 'C'] }}\r\n                series={[20, 30, 50]}\r\n                type=\"donut\"\r\n                width={380}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}