{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2270536\\\\finances-gestao\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, CategoryScale, LinearScale, BarElement, BarController } from 'chart.js';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [modoNoturno, setModoNoturno] = useState(false);\n  const alternarModoNoturno = () => {\n    setModoNoturno(!modoNoturno);\n  };\n  const line = document.querySelector('.lines-across');\n  const scrollPosition = window.scrollY;\n  const positionToFix = 200; // Defina a posição de rolagem na qual deseja fixar a linha\n  const [dadosGraficoBarras, setDadosGraficoBarras] = useState(null);\n  const [exibirChartPizza, setExibirChartPizza] = useState(true);\n  useEffect(() => {\n    if (dadosAlterados) {\n      calcularDistribuicaoCategorias();\n      setDadosAlterados(false); // Reseta para evitar renderizações subsequentes\n    }\n  }, [dadosAlterados]);\n  useEffect(() => {\n    // Lógica para fixar a linha ao rolar\n    const handleScroll = () => {\n      const line = document.querySelector('.lines-across');\n      const scrollPosition = window.scrollY;\n      const positionToFix = 200;\n      if (line) {\n        if (scrollPosition >= positionToFix) {\n          line.style.position = 'fixed';\n          line.style.top = '0';\n        } else {\n          line.style.position = 'static';\n        }\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  if (line) {\n    if (scrollPosition >= positionToFix) {\n      line.style.position = 'fixed';\n      line.style.top = '0';\n    } else {\n      line.style.position = 'static';\n    }\n  }\n  useEffect(() => {\n    const body = document.body;\n    if (modoNoturno) {\n      body.classList.add('dark-mode');\n    } else {\n      body.classList.remove('dark-mode');\n    }\n    // Adicione ou remova a classe específica\n    body.classList.toggle('white-bold-text', modoNoturno);\n  }, [modoNoturno]);\n  const [descricao, setDescricao] = useState('');\n  const [valor, setValor] = useState('');\n  const [registros, setRegistros] = useState([]);\n  const [data, setData] = useState('');\n  const [categoria, setCategoria] = useState('');\n  const [saldoTotal, setSaldoTotal] = useState(0);\n  const [contadorDespesas, setContadorDespesas] = useState(0);\n  const [saldoGuardado, setSaldoGuardado] = useState(0);\n  const [saldoIndisponivel, setSaldoIndisponivel] = useState(0);\n  const [categoriaDataBar, setCategoriaDataBar] = useState(null);\n  const calcularSaldoGuardado = quantidade => {\n    setSaldoGuardado(parseFloat(quantidade) || 0);\n  };\n  const handleAdicionar = () => {\n    const novoRegistro = {\n      descricao,\n      valor,\n      data,\n      categoria\n    };\n    setRegistros([...registros, novoRegistro]);\n    setDescricao('');\n    setValor('');\n    setData('');\n    setCategoria('');\n    setContadorDespesas(contadorDespesas + 1);\n    calcularDistribuicaoCategorias();\n    setExibirChartPizza(true); // Quando um novo registro é adicionado, exibir o chart-pizza\n  };\n\n  const calcularSaldoDisponivel = () => {\n    const totalDespesas = registros.reduce((total, registro) => total + parseFloat(registro.valor), 0);\n    const saldoDisponivel = saldoTotal - totalDespesas;\n    return {\n      saldoDisponivel,\n      totalDespesas\n    };\n  };\n  const calcularPorcentagemLucro = () => {\n    const {\n      saldoDisponivel,\n      totalDespesas\n    } = calcularSaldoDisponivel();\n    const porcentagemLucro = saldoDisponivel / (totalDespesas || 1) * 100;\n    return porcentagemLucro;\n  };\n  useEffect(() => {\n    Chart.register(CategoryScale, LinearScale, BarElement, BarController);\n    const chartData = {\n      labels: ['Saldo Total', 'Saldo Disponível'],\n      datasets: [{\n        label: 'Saldo',\n        data: [saldoTotal, calcularSaldoDisponivel().saldoDisponivel],\n        backgroundColor: ['blue', 'red']\n      }]\n    };\n    setChartData(chartData);\n  }, [saldoTotal, registros]);\n  const [chartData, setChartData] = useState(null);\n  const {\n    saldoDisponivel,\n    totalDespesas\n  } = calcularSaldoDisponivel();\n  const calcularDistribuicaoCategorias = () => {\n    const categorias = {};\n    registros.forEach(registro => {\n      const {\n        categoria\n      } = registro;\n      categorias[categoria] = categorias[categoria] ? categorias[categoria] + 1 : 1;\n    });\n    const labels = Object.keys(categorias);\n    const data = Object.values(categorias);\n    setCategoriaData({\n      options: {\n        labels\n      },\n      series: data,\n      type: 'donut'\n    });\n  };\n  useEffect(() => {\n    calcularDistribuicaoCategorias();\n  }, [registros]);\n  const [categoriaData, setCategoriaData] = useState(null);\n  const [waveChartData, setWaveChartData] = useState({\n    options: {\n      chart: {\n        id: 'wave-chart',\n        type: 'line',\n        height: 350\n      },\n      xaxis: {\n        categories: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']\n      }\n    },\n    series: [{\n      name: 'Gastos',\n      data: [1000, 1500, 1200, 1800, 2000, 1600, 1700, 1900, 2100, 2200, 2400, 2600]\n    }]\n  });\n  const [lucroChartData, setLucroChartData] = useState({\n    options: {\n      chart: {\n        id: 'lucro-chart',\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          hollow: {\n            size: '70%'\n          },\n          dataLabels: {\n            showOn: 'always'\n          }\n        }\n      },\n      labels: ['Lucro']\n    },\n    series: [calcularPorcentagemLucro()]\n  });\n  const [quantidadeGuardar, setQuantidadeGuardar] = useState('');\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [iraRetirar, setIraRetirar] = useState('');\n  const [valorImposto, setValorImposto] = useState(0);\n  const [contasPassaram, setContasPassaram] = useState(false);\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const saldoDisponivel = calcularSaldoDisponivel().saldoDisponivel;\n    const resultado = parseFloat(quantidadeGuardar) - saldoDisponivel;\n    setSaldoGuardado(resultado >= 0 ? parseFloat(quantidadeGuardar) : 0);\n    setSaldoIndisponivel(resultado < 0 ? Math.abs(resultado) : 0);\n    setValorImposto(resultado);\n    setContasPassaram(resultado >= 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard ${modoNoturno ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#dashboard\",\n          id: \"dashboard-link\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#desempenho\",\n          children: \"Desempenho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#poupanca\",\n          children: \"Poupan\\xE7a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lines-across\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-across\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-expense-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-add\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saldo-total-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"saldoTotal\",\n            children: \"Saldo Total:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"saldoTotal\",\n            value: saldoTotal,\n            onChange: e => setSaldoTotal(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"descricao\",\n            children: \"Gastos:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"descricao\",\n            value: descricao,\n            onChange: e => setDescricao(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"valor\",\n            children: \"Valor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"valor\",\n            value: valor,\n            onChange: e => setValor(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"data\",\n              children: \"Data:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"data\",\n              value: data,\n              onChange: e => setData(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"categoria\",\n              children: \"Categoria:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"categoria\",\n              value: categoria,\n              onChange: e => setCategoria(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecione uma categoria\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Conta de Luz\",\n                children: \"Conta de Luz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Conta de Telefone\",\n                children: \"Conta de Telefone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Conta de \\xC1gua\",\n                children: \"Conta de \\xC1gua\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Contas de Casa\",\n                children: \"Contas de Casa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Gastos Emergenciais\",\n                children: \"Gastos Emergenciais\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Compras\",\n                children: \"Compras\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAdicionar,\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-pizza\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Maiores gastos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), categoriaData && /*#__PURE__*/_jsxDEV(ReactApexChart, {\n            options: categoriaData.options,\n            series: categoriaData.series,\n            type: categoriaData.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"vNBRrN5H+2LTDceBidPsLnG+BAU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","CategoryScale","LinearScale","BarElement","BarController","ReactApexChart","jsxDEV","_jsxDEV","Dashboard","_s","modoNoturno","setModoNoturno","alternarModoNoturno","line","document","querySelector","scrollPosition","window","scrollY","positionToFix","dadosGraficoBarras","setDadosGraficoBarras","exibirChartPizza","setExibirChartPizza","dadosAlterados","calcularDistribuicaoCategorias","setDadosAlterados","handleScroll","style","position","top","addEventListener","removeEventListener","body","classList","add","remove","toggle","descricao","setDescricao","valor","setValor","registros","setRegistros","data","setData","categoria","setCategoria","saldoTotal","setSaldoTotal","contadorDespesas","setContadorDespesas","saldoGuardado","setSaldoGuardado","saldoIndisponivel","setSaldoIndisponivel","categoriaDataBar","setCategoriaDataBar","calcularSaldoGuardado","quantidade","parseFloat","handleAdicionar","novoRegistro","calcularSaldoDisponivel","totalDespesas","reduce","total","registro","saldoDisponivel","calcularPorcentagemLucro","porcentagemLucro","register","chartData","labels","datasets","label","backgroundColor","setChartData","categorias","forEach","Object","keys","values","setCategoriaData","options","series","type","categoriaData","waveChartData","setWaveChartData","chart","id","height","xaxis","categories","name","lucroChartData","setLucroChartData","plotOptions","radialBar","hollow","size","dataLabels","showOn","quantidadeGuardar","setQuantidadeGuardar","dataInicio","setDataInicio","dataFim","setDataFim","iraRetirar","setIraRetirar","valorImposto","setValorImposto","contasPassaram","setContasPassaram","handleFormSubmit","e","preventDefault","resultado","Math","abs","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/2270536/finances-gestao/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport { Chart, CategoryScale, LinearScale, BarElement, BarController } from 'chart.js';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n  const [modoNoturno, setModoNoturno] = useState(false);\r\n\r\n  const alternarModoNoturno = () => {\r\n    setModoNoturno(!modoNoturno);\r\n  };\r\n  const line = document.querySelector('.lines-across');\r\n  const scrollPosition = window.scrollY;\r\n  const positionToFix = 200; // Defina a posição de rolagem na qual deseja fixar a linha\r\n  const [dadosGraficoBarras, setDadosGraficoBarras] = useState(null);\r\n  const [exibirChartPizza, setExibirChartPizza] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    if (dadosAlterados) {\r\n      calcularDistribuicaoCategorias();\r\n      setDadosAlterados(false); // Reseta para evitar renderizações subsequentes\r\n    }\r\n  }, [dadosAlterados]);\r\n  \r\n\r\n  \r\n  useEffect(() => {\r\n    // Lógica para fixar a linha ao rolar\r\n    const handleScroll = () => {\r\n      const line = document.querySelector('.lines-across');\r\n      const scrollPosition = window.scrollY;\r\n      const positionToFix = 200;\r\n\r\n      if (line) {\r\n        if (scrollPosition >= positionToFix) {\r\n          line.style.position = 'fixed';\r\n          line.style.top = '0';\r\n        } else {\r\n          line.style.position = 'static';\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  \r\n\r\n  if (line) {\r\n    if (scrollPosition >= positionToFix) {\r\n        line.style.position = 'fixed';\r\n        line.style.top = '0';\r\n    } else {\r\n        line.style.position = 'static';\r\n    }\r\n}\r\n\r\n  useEffect(() => {\r\n    const body = document.body;\r\n    if (modoNoturno) {\r\n      body.classList.add('dark-mode');\r\n    } else {\r\n      body.classList.remove('dark-mode');\r\n    }\r\n    // Adicione ou remova a classe específica\r\n    body.classList.toggle('white-bold-text', modoNoturno);\r\n  }, [modoNoturno]);\r\n\r\n  const [descricao, setDescricao] = useState('');\r\n  const [valor, setValor] = useState('');\r\n  const [registros, setRegistros] = useState([]);\r\n  const [data, setData] = useState('');\r\n  const [categoria, setCategoria] = useState('');\r\n  const [saldoTotal, setSaldoTotal] = useState(0);\r\n  const [contadorDespesas, setContadorDespesas] = useState(0);\r\n  const [saldoGuardado, setSaldoGuardado] = useState(0);\r\n  const [saldoIndisponivel, setSaldoIndisponivel] = useState(0);\r\n  const [categoriaDataBar, setCategoriaDataBar] = useState(null);\r\n\r\n  \r\n  \r\n  const calcularSaldoGuardado = (quantidade) => {\r\n    setSaldoGuardado(parseFloat(quantidade) || 0);\r\n  };\r\n\r\n  const handleAdicionar = () => {\r\n    const novoRegistro = { descricao, valor, data, categoria };\r\n    setRegistros([...registros, novoRegistro]);\r\n    setDescricao('');\r\n    setValor('');\r\n    setData('');\r\n    setCategoria('');\r\n    setContadorDespesas(contadorDespesas + 1);\r\n\r\n    calcularDistribuicaoCategorias();\r\n    setExibirChartPizza(true); // Quando um novo registro é adicionado, exibir o chart-pizza\r\n  };\r\n  \r\n  const calcularSaldoDisponivel = () => {\r\n    const totalDespesas = registros.reduce((total, registro) => total + parseFloat(registro.valor), 0);\r\n    const saldoDisponivel = saldoTotal - totalDespesas;\r\n    return { saldoDisponivel, totalDespesas };\r\n  };\r\n\r\n  const calcularPorcentagemLucro = () => {\r\n    const { saldoDisponivel, totalDespesas } = calcularSaldoDisponivel();\r\n    const porcentagemLucro = (saldoDisponivel / (totalDespesas || 1)) * 100;\r\n    return porcentagemLucro;\r\n  };\r\n\r\n  useEffect(() => {\r\n    Chart.register(CategoryScale, LinearScale, BarElement, BarController);\r\n\r\n    const chartData = {\r\n      labels: ['Saldo Total', 'Saldo Disponível'],\r\n      datasets: [\r\n        {\r\n          label: 'Saldo',\r\n          data: [saldoTotal, calcularSaldoDisponivel().saldoDisponivel],\r\n          backgroundColor: ['blue', 'red'],\r\n        },\r\n      ],\r\n    };\r\n\r\n    setChartData(chartData);\r\n  }, [saldoTotal, registros]);\r\n\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  const { saldoDisponivel, totalDespesas } = calcularSaldoDisponivel();\r\n\r\n  const calcularDistribuicaoCategorias = () => {\r\n    const categorias = {};\r\n    registros.forEach((registro) => {\r\n      const { categoria } = registro;\r\n      categorias[categoria] = categorias[categoria] ? categorias[categoria] + 1 : 1;\r\n    });\r\n\r\n    const labels = Object.keys(categorias);\r\n    const data = Object.values(categorias);\r\n\r\n    setCategoriaData({\r\n      options: {\r\n        labels,\r\n      },\r\n      series: data,\r\n      type: 'donut',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    calcularDistribuicaoCategorias();\r\n  }, [registros]);\r\n  \r\n\r\n  const [categoriaData, setCategoriaData] = useState(null);\r\n\r\n  const [waveChartData, setWaveChartData] = useState({\r\n    options: {\r\n      chart: {\r\n        id: 'wave-chart',\r\n        type: 'line',\r\n        height: 350,\r\n      },\r\n      xaxis: {\r\n        categories: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Gastos',\r\n        data: [1000, 1500, 1200, 1800, 2000, 1600, 1700, 1900, 2100, 2200, 2400, 2600],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [lucroChartData, setLucroChartData] = useState({\r\n    options: {\r\n      chart: {\r\n        id: 'lucro-chart',\r\n        type: 'radialBar',\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          hollow: {\r\n            size: '70%',\r\n          },\r\n          dataLabels: {\r\n            showOn: 'always',\r\n          },\r\n        },\r\n      },\r\n      labels: ['Lucro'],\r\n    },\r\n    series: [calcularPorcentagemLucro()],\r\n  });\r\n\r\n  const [quantidadeGuardar, setQuantidadeGuardar] = useState('');\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [iraRetirar, setIraRetirar] = useState('');\r\n\r\n  const [valorImposto, setValorImposto] = useState(0);\r\n  const [contasPassaram, setContasPassaram] = useState(false);\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const saldoDisponivel = calcularSaldoDisponivel().saldoDisponivel;\r\n    const resultado = parseFloat(quantidadeGuardar) - saldoDisponivel;\r\n    setSaldoGuardado(resultado >= 0 ? parseFloat(quantidadeGuardar) : 0);\r\n    setSaldoIndisponivel(resultado < 0 ? Math.abs(resultado) : 0);\r\n    setValorImposto(resultado);\r\n    setContasPassaram(resultado >= 0);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    \r\n    <div className={`dashboard ${modoNoturno ? 'dark-mode' : ''}`}>\r\n       <div className=\"center-container\">\r\n       <div className=\"navigation-links\">\r\n       <a href=\"#dashboard\" id=\"dashboard-link\">Dashboard</a>\r\n        <a href=\"#desempenho\">Desempenho</a>\r\n        <a href=\"#poupanca\">Poupança</a>\r\n      </div>\r\n      </div>\r\n      <div className=\"lines-across\"> </div>\r\n      <div className=\"logo-across\"></div>\r\n      <div className=\"add-expense-container\">\r\n        <div className=\"container-add\">\r\n        <div className=\"saldo-total-input\">\r\n            <label htmlFor=\"saldoTotal\">Saldo Total:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"saldoTotal\"\r\n              value={saldoTotal}\r\n              onChange={(e) => setSaldoTotal(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"description-input\">\r\n            <label htmlFor=\"descricao\">Gastos:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"descricao\"\r\n              value={descricao}\r\n              onChange={(e) => setDescricao(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"value-input\">\r\n            <label htmlFor=\"valor\">Valor:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"valor\"\r\n              value={valor}\r\n              onChange={(e) => setValor(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"\">\r\n          <div className=\"date-input\">\r\n            <label htmlFor=\"data\">Data:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"data\"\r\n              value={data}\r\n              onChange={(e) => setData(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"category-input\">\r\n            \r\n            <label htmlFor=\"categoria\">Categoria:</label>\r\n            <select\r\n              id=\"categoria\"\r\n              value={categoria}\r\n              onChange={(e) => setCategoria(e.target.value)}\r\n            >\r\n              <option value=\"\">Selecione uma categoria</option>\r\n              <option value=\"Conta de Luz\">Conta de Luz</option>\r\n              <option value=\"Conta de Telefone\">Conta de Telefone</option>\r\n              <option value=\"Conta de Água\">Conta de Água</option>\r\n              <option value=\"Contas de Casa\">Contas de Casa</option>\r\n              <option value=\"Gastos Emergenciais\">Gastos Emergenciais</option>\r\n              <option value=\"Compras\">Compras</option>\r\n            </select>\r\n          </div>\r\n          </div>\r\n          <button onClick={handleAdicionar}>Adicionar</button>\r\n        </div>\r\n        <div className=\"body-container\">\r\n        <div className=\"chart-pizza\">\r\n            <h4>Maiores gastos</h4>\r\n            {categoriaData && (\r\n              <ReactApexChart options={categoriaData.options} series={categoriaData.series} type={categoriaData.type} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default Dashboard; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}